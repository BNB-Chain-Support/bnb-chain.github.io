"use strict";(self.webpackChunkbeta_BNB_Docs=self.webpackChunkbeta_BNB_Docs||[]).push([[4466],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=c(n),u=r,m=h["".concat(l,".").concat(u)]||h[u]||p[u]||i;return n?a.createElement(m,o(o({ref:t},d),{},{components:n})):a.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[h]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},96025:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_label:"Cross-Chain Models",sidebar_position:2,hide_table_of_contents:!1},o="Cross-Chain Models",s={unversionedId:"greenfield/tech-specs/cross-chain-models",id:"greenfield/tech-specs/cross-chain-models",title:"Cross-Chain Models",description:"The Cross-chain framework has been introduced in the Design Section. Here more",source:"@site/docs/greenfield/tech-specs/cross-chain-models.md",sourceDirName:"greenfield/tech-specs",slug:"/greenfield/tech-specs/cross-chain-models",permalink:"/docs/greenfield/tech-specs/cross-chain-models",draft:!1,editUrl:"https://github.com/bnb-chain/bnb-chain.github.io/blob/master/docs/greenfield/tech-specs/cross-chain-models.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Cross-Chain Models",sidebar_position:2,hide_table_of_contents:!1}},l={},c=[{value:"Communication Channels and Packages",id:"communication-channels-and-packages",level:2},{value:"Vote Poll",id:"vote-poll",level:3},{value:"Channel and Sequence",id:"channel-and-sequence",level:3},{value:"Reliability Protocol",id:"reliability-protocol",level:3},{value:"Validator Update",id:"validator-update",level:3},{value:"Economic",id:"economic",level:2},{value:"Fee and Reward of Cross-Chain Packages",id:"fee-and-reward-of-cross-chain-packages",level:3},{value:"Race to Deliver Cross-Chain Packages",id:"race-to-deliver-cross-chain-packages",level:3},{value:"Callbacks and Limited Gas",id:"callbacks-and-limited-gas",level:3},{value:"Cross-Chain Infrastructure Contracts on BSC",id:"cross-chain-infrastructure-contracts-on-bsc",level:3},{value:"Error and Failure Handling",id:"error-and-failure-handling",level:2}],d={toc:c},h="wrapper";function p(e){let{components:t,...i}=e;return(0,r.kt)(h,(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cross-chain-models"},"Cross-Chain Models"),(0,r.kt)("p",null,"The Cross-chain framework has been introduced in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/greenfield/design/design-principles"},"Design Section"),". Here more\ndetails about the communication layer and economics will be explained."),(0,r.kt)("h2",{id:"communication-channels-and-packages"},"Communication Channels and Packages"),(0,r.kt)("h3",{id:"vote-poll"},"Vote Poll"),(0,r.kt)("p",null,'A new P2P communication across the cross-chain relayers will be\nintroduced, called "',(0,r.kt)("strong",{parentName:"p"},"Vote Poll"),'". This Vote Poll will gossip about the\nsigned votes within the network. To avoid message flooding, all the\nsigned votes will expire after a fixed time. The Greenfield relayers can\neither put votes to or fetch votes from the poll and assemble it as\ncross-chain package transactions.'),(0,r.kt)("h3",{id:"channel-and-sequence"},"Channel and Sequence"),(0,r.kt)("p",null,'To allow multiplexing and replay attack resistance, "',(0,r.kt)("strong",{parentName:"p"},"Channel"),'" and\n"',(0,r.kt)("strong",{parentName:"p"},"Sequence"),'" concepts are introduced to manage any type of communication.\nFollowing is an example definition:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type Package struct {\n    PackType     uint8 // SYN, ACK or FAIL_ACK\n    SrcChainId   uint16\n    DstChainId   uint16\n    Sequence     int64\n    ChannelId    uint16\n    Payload      []byte\n    BLSSignature sdk.Sig\n    BLSBits      sdk.Bits // indicate the signer of the package\n}\n")),(0,r.kt)("p",null,"The packages in the same channel must be processed in sequence, while\nthey can be processed in parallel if they belong to different channels."),(0,r.kt)("p",null,"The operation messages on different Greenfield resources are mapped to\ndifferent channels. For example, buckets and storage objects belong to\ndifferent channels."),(0,r.kt)("h3",{id:"reliability-protocol"},"Reliability Protocol"),(0,r.kt)("p",null,"Here a protocol is defined to ensure reliable stream delivery of data\nbetween BSC and Greenfield."),(0,r.kt)("p",null,"The protocol must recover the scenarios when the cross-chain data is\ndamaged, duplicated, or delivered out of order by the relayers. It\nassigns a sequence number to each package and requires a positive\nacknowledgment (ACK) from the target chain. Here there are three kinds\nof packages:"),(0,r.kt)("p",null,"   ",(0,r.kt)("strong",{parentName:"p"},"1.")," ",(0,r.kt)("strong",{parentName:"p"},"SYN:")," the initial cross-chain packages started by either users or dApps."),(0,r.kt)("p",null,"   ",(0,r.kt)("strong",{parentName:"p"},"2.")," ",(0,r.kt)("strong",{parentName:"p"},"ACK:")," the positive acknowledgment sent by the resource layer of the target chain."),(0,r.kt)("p",null,"   ",(0,r.kt)("strong",{parentName:"p"},"3.")," ",(0,r.kt)("strong",{parentName:"p"},"FAIL_ACK:")," the negative acknowledgment sent by the communication layer of the target chain, usually caused by damaged data or protocol inconsistency triggered by the edge case."),(0,r.kt)("p",null,"Each communication package must start with ",(0,r.kt)("inlineCode",{parentName:"p"},"SYN")," and end with ",(0,r.kt)("inlineCode",{parentName:"p"},"ACK")," or\n",(0,r.kt)("inlineCode",{parentName:"p"},"FAIL_ACK"),". The handler code and contracts on each side must handle these\nprimitives."),(0,r.kt)("h3",{id:"validator-update"},"Validator Update"),(0,r.kt)("p",null,"With an aggregatable multi-signature scheme, e.g. BLS, the cross-chain\ncan be quite light-weighted. However sufficient data must be appended\nonto the package to indicate the validators who sign the events, this\ncan be achieved by combining a bitmap and a validator set on-chain.\nHowever the Greenfield validator set is volatile, Greenfield validators\nhave to sync the information to BSC once there is an update about the\nGreenfield validator set. This is implemented by building a Greenfield\nlight client on BSC, which is similar to the light client implemented\nfor BNB Beacon Chain on BSC."),(0,r.kt)("h2",{id:"economic"},"Economic"),(0,r.kt)("p",null,"The Greenfield relayers play an important role in relaying inter-chain\npackages. A proper incentive is required to keep relayers making their\nlong-term contribution."),(0,r.kt)("h3",{id:"fee-and-reward-of-cross-chain-packages"},"Fee and Reward of Cross-Chain Packages"),(0,r.kt)("p",null,"Both ",(0,r.kt)("inlineCode",{parentName:"p"},"SYN")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ACK/FAIL_ACK")," packages cost gas to relay, the users (or\nsmart contracts) will need to pay the fee to cover both of them when\nthey start the SYN cross-chain packages."),(0,r.kt)("p",null,"To encourage Greenfield relayers to sign cross-chain packages:"),(0,r.kt)("p",null,"   ",(0,r.kt)("strong",{parentName:"p"},"1.")," The package deliverer will get a fixed ratio of the relay fee as a reward."),(0,r.kt)("p",null,"   ",(0,r.kt)("strong",{parentName:"p"},"2.")," The rest relay fee will be distributed equally among those who sign the vote."),(0,r.kt)("h3",{id:"race-to-deliver-cross-chain-packages"},"Race to Deliver Cross-Chain Packages"),(0,r.kt)("p",null,"There are multiple Greenfield relayers, and they may compete to submit\nthe aggregated multi-signed packages onto the Greenfield blockchain and\nBSC. To avoid racing transactions caused by the competition, which\nwastes gas, the relayers are rotated to relay transactions, e.g. taking\nshifts every 10 minutes. Each cross-chain package gets a timestamp, if\nit is not relayed within a limited delay when the designated relayer\ndoesn't perform the duty, any other Greenfield relayers are allowed to\nrelay such a package."),(0,r.kt)("h3",{id:"callbacks-and-limited-gas"},"Callbacks and Limited Gas"),(0,r.kt)("p",null,"BSC dApps, i.e. smart contracts on BSC, are allowed to implement their\nown logic to handle ",(0,r.kt)("inlineCode",{parentName:"p"},"ACK")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"FAIL_ACK")," packages. The smart contracts can register callback functions to handle the ",(0,r.kt)("inlineCode",{parentName:"p"},"ACK")," packages. As it is\nimpossible for the cross-chain infrastructure to predict the gas\nconsumption of the callback, a gas limitation estimate should be defined\nfrom the smart contracts that register the callbacks."),(0,r.kt)("p",null,"For any cross-chain packages that start from BSC, the smart contract\nneeds to specify the gas limitation for the ",(0,r.kt)("inlineCode",{parentName:"p"},"ACK")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"FAIL_ACK")," package, the relayer fee is prepaid accordingly on BSC. Relayers may refund the excessive fees later."),(0,r.kt)("h3",{id:"cross-chain-infrastructure-contracts-on-bsc"},"Cross-Chain Infrastructure Contracts on BSC"),(0,r.kt)("p",null,"The cross-chain logic is also implemented on Greenfield as smart\ncontracts. But these contracts will not be implemented on BSC as the\ngenesis contract anymore, but just upgradeable contracts. The upgrade\nwill be controlled by the agreement of the Greenfield validators through\na governance process. The design can take full advantage of normal\ncontracts, such as working around the 24k size limitation by delegating\ndifferent logic to different implementation contracts."),(0,r.kt)("h2",{id:"error-and-failure-handling"},"Error and Failure Handling"),(0,r.kt)("p",null,"There are errors and failures that can happen during cross-chain\ncommunication."),(0,r.kt)("p",null,'One type of error is from the cross-chain protocol itself and is marked\nby "',(0,r.kt)("strong",{parentName:"p"},"FAIL_ACK"),'". This means the protocol itself meets some fatal errors, and it cannot complete the cross-chain package transport even before it touches the layer above the communication layer. It is usually caused by system bugs that result in data corruption or inconsistency.'),(0,r.kt)("p",null,'The other type is the error above the communication layer, for example,\nthe errors triggered by improper logic or bugs in the resource mirror\nlayer or the application layer. Such cases should still return "ACK" at\nthe communication layer, but the ACK package should contain enough\ninformation for the resource mirror layer or the application layer to\nrecover to the original state.'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"cross-chain-error-and-failure-handling",src:n(77243).Z,width:"1050",height:"918"})),(0,r.kt)("div",{align:"center"},(0,r.kt)("i",null,"Cross-chain Error and Failure Handling")),(0,r.kt)("p",null,"When Greenfield emits an ",(0,r.kt)("inlineCode",{parentName:"p"},"ACK")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"FAIL_ACK")," package, the registered\ncallbacks of BSC dApps (i.e. the smart contracts) will be called up to\nhandle the package, but these functions may fail to handle the\n",(0,r.kt)("inlineCode",{parentName:"p"},"ACK/FAIL_ACK")," packages due to the bugs or exceptions in the callbacks,\nthese packages will be put under in another queue that belongs to the\nBSC dApps."),(0,r.kt)("p",null,"The corresponding BSC dApps can retry the package, e.g. with a higher\ngas limit, or just skip the package to tolerate failure, or even upgrade\nits contract to handle corner cases. The BSC dApps can not start new\ncross-chain packages if there are any pending failed packages in their\nqueue. It asks the BSC dApps must handle the failed packages in\nsequence."),(0,r.kt)("p",null,"The communication layer can catch any exception thrown by the resource mirror layer or application layer, so that package delivery won't be blocked by any customized applications."))}p.isMDXComponent=!0},77243:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/22.3-Error-and-Failure-Handling-cace5f485ffcc47cdd1bbd2811fd4313.jpg"}}]);